"""
Django settings for smarttyre project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import io
import os
import dotenv
import logging
import dj_database_url

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
dotenv.load_dotenv(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 'django-insecure-!l(z=lj2r9v9*y@*p%bg$gewrjc@e)p7%+ly)3)6(wlz*%pm47')
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DJANGO_ENVIRONMENT', 'development')
if DEBUG == 'development':
    DEBUG = True
elif DEBUG == 'production':
    DEBUG = False
else:
    raise ValueError('DJANGO_ENVIRONMENT is invalid')

# Setup allowed hosts
HOSTNAME = os.environ.get('HOSTNAME', 'localhost')
if DEBUG:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = ['127.0.0.1', HOSTNAME]


# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'channels',
    'webapp.apps.WebappConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'encrypted_model_fields',
    'captcha',
]

MIDDLEWARE = [
    'csp.middleware.CSPMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'smarttyre.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'webapp.context_processors.language',
            ],
        },
    },
]

WSGI_APPLICATION = 'smarttyre.wsgi.application'
ASGI_APPLICATION = 'smarttyre.asgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('SQL_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.environ.get('SQL_DATABASE', 'db.sqlite3'),
        'USER': os.environ.get('SQL_USER', 'user'),
        'PASSWORD': os.environ.get('SQL_PASSWORD', 'password'),
        'HOST': os.environ.get('SQL_HOST', 'localhost'),
        'PORT': os.environ.get('SQL_PORT', ''),
    }
}

# Update database configuration
DATABASES['default'].update(dj_database_url.config(conn_max_age=500))


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

WHITENOISE_USE_FINDERS = True
STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = '/static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Setup login and logout redirect

LOGOUT_REDIRECT_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'

# Setup media files

MEDIA_ROOT = BASE_DIR / 'resources'
MEDIA_URL = '/media/'

# Setup security

if not DEBUG:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True
    SECURE_SSL_REDIRECT = True

# Setup content security policy

CSP_STYLE_SRC = ('\'self\' \'unsafe-inline\'',
                 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css',
                 'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css',
                 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css',)
CSP_FONT_SRC = ('\'self\'',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-solid-900.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-brands-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-regular-400.ttf',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-v4compatibility.woff2',
                'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/webfonts/fa-v4compatibility.ttf',
                'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/fonts/bootstrap-icons.woff2',
                'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/fonts/bootstrap-icons.woff',)
CSP_SCRIPT_SRC = ('\'self\' \'unsafe-inline\'',
                  'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js',
                  'https://www.google.com/recaptcha/api.js',
                  'https://www.gstatic.com/recaptcha/releases/4rwLQsl5N_ccppoTAwwwMrEN/recaptcha__pt_pt.js',)
CSP_FRAME_SRC = ('https://www.google.com/',)
CSP_INCLUDE_NONCE_IN = ('script-src',)
CSP_FRAME_ANCESTORS = ('\'none\'',)
CSP_DEFAULT_SRC = ('\'none\'', )
CSP_CONNECT_SRC = ('\'self\'',
                   f'ws://{HOSTNAME}/tyres/',
                   f'wss://{HOSTNAME}/tyres/',)
CSP_FORM_ACTION = ('\'self\'',)
CSP_OBJECT_SRC = ('\'none\'', )
CSP_BASE_URI = ('\'none\'', )
CSP_IMG_SRC = ('\'self\'',
               'https://*',
               'http://*',
               'data:',
               'blob:',
               'filesystem:',)


# Setup recaptcha

__RECAPTCHA_PUBLIC_KEY = os.environ.get('RECAPTCHA_PUBLIC_KEY')
__RECAPTCHA_PRIVATE_KEY = os.environ.get('RECAPTCHA_PRIVATE_KEY')
if not DEBUG or (__RECAPTCHA_PUBLIC_KEY is not None and __RECAPTCHA_PRIVATE_KEY is not None):
    RECAPTCHA_PUBLIC_KEY = __RECAPTCHA_PUBLIC_KEY
    RECAPTCHA_PRIVATE_KEY = __RECAPTCHA_PRIVATE_KEY
    if RECAPTCHA_PUBLIC_KEY is None or RECAPTCHA_PRIVATE_KEY is None:
        raise ValueError(
            'RECAPTCHA_PUBLIC_KEY and RECAPTCHA_PRIVATE_KEY must be set')
else:
    SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']

# Setup email

EMAIL_CONFIRMATION_FORCE = not DEBUG
__EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
__EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_CONFIRMATION_ENABLE = EMAIL_CONFIRMATION_FORCE or (
    __EMAIL_HOST_USER is not None and __EMAIL_HOST_PASSWORD is not None)
if EMAIL_CONFIRMATION_ENABLE:
    EMAIL_USE_TLS = True
    EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.office365.com')
    EMAIL_HOST_USER = __EMAIL_HOST_USER
    EMAIL_HOST_PASSWORD = __EMAIL_HOST_PASSWORD
    EMAIL_PORT = 587
    SERVER_EMAIL = EMAIL_HOST_USER
    DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
    if EMAIL_HOST_USER is None or EMAIL_HOST_PASSWORD is None:
        raise ValueError('EMAIL_HOST_USER and EMAIL_HOST_PASSWORD must be set')

# Setup encryption key

FIELD_ENCRYPTION_KEY = os.environ.get('FIELD_ENCRYPTION_KEY')
if FIELD_ENCRYPTION_KEY is None:
    raise ValueError('FIELD_ENCRYPTION_KEY must be set')

# Setup logging

logging.basicConfig(level=logging.DEBUG, stream=io.StringIO())
